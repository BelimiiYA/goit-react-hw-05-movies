{"version":3,"file":"static/js/736.8fdad230.chunk.js","mappings":"iQAEaA,EAAOC,EAAAA,EAAOC,GAAV,oDAIJC,EAAOF,EAAAA,EAAOG,EAAV,+F,SCgDjB,EAhDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAYR,GACTS,MAAK,SAAAN,GACJC,EAAUD,EACX,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,2BACGK,IAAW,SAACU,EAAA,EAAD,KAEZ,SAACpB,EAAD,UACGQ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,2BACE,gBACEC,MAAM,QACNC,IACEL,EAAY,yCAC0BA,GAD1B,kEAIdM,IAAKL,KAEP,SAACrB,EAAD,UAAOsB,KACP,UAACtB,EAAD,WAAM,cAAYuB,OAXXJ,EADC,QAkBnB,C,mMCnDDQ,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJJ,EAAAA,EAAMK,IAAN,qCAAwCF,IADpC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAMK,IAAN,+BACGF,EADH,4DAC8DO,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAMpC,GAAN,uFACRyB,EAAAA,EAAMK,IAAN,gBACZ9B,EADY,oBACO4B,EADP,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBxB,EAAW,mCAAG,WAAMR,GAAN,uFACFyB,EAAAA,EAAMK,IAAN,gBACZ9B,EADY,4BACe4B,EADf,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKK,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMtC,GAAN,uFACHyB,EAAAA,EAAMK,IAAN,gBACZ9B,EADY,4BACe4B,EADf,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n    list-style-type: none;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    margin-bottom: 10px;\r\n`;","import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchActors } from 'services/TmbdApi';\r\nimport Loader from 'components/Loader/Loader';\r\nimport { List, Text } from './Cast.styled';\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [actors, setActors] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onActorsOfMovie = () => {\r\n      setLoading(true);\r\n\r\n      fetchActors(movieId)\r\n        .then(actors => {\r\n          setActors(actors);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    onActorsOfMovie();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Loader />}\r\n\r\n      <List>\r\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\r\n          <li key={id}>\r\n            <img\r\n              width=\"200px\"\r\n              src={\r\n                profile_path\r\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\r\n                  : `https://www.millergerrard.com/propertyuploads/video/novideo.jpg`\r\n              }\r\n              alt={original_name}\r\n            />\r\n            <Text>{name}</Text>\r\n            <Text>Character: {character}</Text>\r\n          </li>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\nexport default Cast;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\nconst API_KEY = 'c67fe955046fda94f580f78044a00ac8';\r\n\r\nexport const fetchTrending = async () => {\r\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchSearchByKeyword = async keyword => {\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchActors = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const fetchReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data.results;\r\n};\r\n"],"names":["List","styled","ul","Text","p","movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","fetchActors","then","catch","error","console","log","finally","Loader","map","id","profile_path","original_name","name","character","width","src","alt","axios","defaults","baseURL","API_KEY","fetchTrending","get","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","cast","fetchReviews"],"sourceRoot":""}