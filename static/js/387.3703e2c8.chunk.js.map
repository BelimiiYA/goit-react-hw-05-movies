{"version":3,"file":"static/js/387.3703e2c8.chunk.js","mappings":"qPAEaA,E,QAAOC,EAAOC,GAAV,oD,SCkDjB,EA9CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAN,GACJC,EAAWD,EACZ,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,gCACGK,IAAW,SAACU,EAAA,EAAD,IACQ,IAAnBZ,EAAQa,SACP,0BACE,SAACnB,EAAD,UACGM,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBlB,EAAQa,SACP,yBAAK,+CAIZ,C,mMChDDM,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJJ,EAAAA,EAAMK,IAAN,qCAAwCF,IADpC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAMK,IAAN,+BACGF,EADH,4DAC8DO,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAMjC,GAAN,uFACRsB,EAAAA,EAAMK,IAAN,gBACZ3B,EADY,oBACOyB,EADP,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAW,mCAAG,WAAMlC,GAAN,uFACFsB,EAAAA,EAAMK,IAAN,gBACZ3B,EADY,4BACeyB,EADf,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKM,MAJI,2CAAH,sDAOX3B,EAAY,mCAAG,WAAMR,GAAN,uFACHsB,EAAAA,EAAMK,IAAN,gBACZ3B,EADY,4BACeyB,EADf,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n    list-style-type: none;\r\n`;","import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchReviews } from 'services/TmbdApi';\r\nimport Loader from 'components/Loader/Loader';\r\nimport { List } from './Reviews.styled';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchReviewsFilms = () => {\r\n      setLoading(true);\r\n\r\n      fetchReviews(movieId)\r\n        .then(reviews => {\r\n          setReviews(reviews);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    fetchReviewsFilms();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      {reviews.length !== 0 && (\r\n        <div>\r\n          <List>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>\r\n                <h2>Author: {review.author}</h2>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      )}\r\n      {reviews.length === 0 && (\r\n        <div>We don't have any reviews for this movie</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\nconst API_KEY = 'c67fe955046fda94f580f78044a00ac8';\r\n\r\nexport const fetchTrending = async () => {\r\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchSearchByKeyword = async keyword => {\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchActors = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const fetchReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data.results;\r\n};\r\n"],"names":["List","styled","ul","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchReviews","then","catch","error","console","log","finally","Loader","length","map","review","author","content","id","axios","defaults","baseURL","API_KEY","fetchTrending","get","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","fetchActors","cast"],"sourceRoot":""}