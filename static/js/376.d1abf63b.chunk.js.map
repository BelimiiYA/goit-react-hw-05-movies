{"version":3,"file":"static/js/376.d1abf63b.chunk.js","mappings":"+QAEaA,EAAaC,EAAAA,EAAOC,KAAV,yFAMVC,EAAQF,EAAAA,EAAOG,MAAV,iUAkBLC,EAAeJ,EAAAA,EAAOK,OAAV,2SAgBZC,EAAQN,EAAAA,EAAOO,KAAV,wH,wKCxCLC,EAAUR,EAAAA,GAAOS,IAAV,wDAKPC,EAASV,EAAAA,GAAOW,IAAV,+DAKNC,EAAOZ,EAAAA,GAAOS,IAAV,kGAIN,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAGHC,EAAShB,EAAAA,GAAOiB,GAAV,wD,SClBNC,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,EACND,EADMC,MAAOC,EACbF,EADaE,YAAaC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OACE,UAACjB,EAAD,YACE,SAACE,EAAD,CACEgB,IACEL,EACI,kCAAoCA,EACpC,6EAENM,IAAKP,KAGP,UAACR,EAAD,YACE,0BACGQ,EAAM,KAAGE,GAAgBA,EAAaM,MAAM,EAAG,GAAG,QAErD,yBAAG,gBAA6B,GAAfL,GAAmBM,UAAU,QAC9C,wBAAI,cACJ,uBAAIL,KACJ,wBAAI,YACJ,SAACR,EAAD,UACGS,EAAOK,OAAS,EACbL,EACGG,MAAM,EAAG,GACTG,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,IACZT,EAAOM,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,WAK7B,E,4DC6BD,EApDqB,WACjB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOnB,EAAP,KAAcoB,EAAd,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAeA,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE4BC,EAAAA,EAAAA,IAAgBT,GAF5C,OAEcf,EAFd,OAGQoB,EAASpB,GACTsB,GAAY,GAJpB,gDAMQG,EAAAA,GAAMC,MAAM,2CANpB,0DADY,uBAAC,WAAD,wBAUZC,EACH,GAAE,CAACZ,IAEAM,EACA,OACI,6BACI,SAAC,KAAD,CAAYO,GAAE,UAAKX,EAASY,MAAMC,MAAlC,UACI,UAAC,KAAD,YACI,SAAC,MAAD,CAAkBC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,MAAQ,gBAI9D,UAAC,KAAD,YACI,SAAClC,EAAD,CAAcC,MAAOA,KACzB,UAAC,KAAD,YACI,yBACI,SAAC,KAAD,CAAY4B,GAAG,OAAOC,MAAO,CAACC,KAAK,GAAD,OAAKb,EAASY,MAAMC,OAAtD,SAA+D,YAInE,yBACI,SAAC,KAAD,CAAYF,GAAG,UAAUC,MAAO,CAACC,KAAK,GAAD,OAAKb,EAASY,MAAMC,OAAzD,SAAkE,kBAK1E,SAAC,EAAAI,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,WAOnB,C","sources":["components/SearchBar/SearchBar.styled.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/VideoDetails/VideoDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const SearchForm = styled.form`\r\n  margin-left: 235px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 12px 14px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  border: 3px solid #021c1e;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  margin-right: 10px;\r\n  border-radius: 24px 8px;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    color: #686868;\r\n    border: 3px solid #686868;\r\n  }\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  padding: 12px 12px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  border: 3px solid #021c1e;\r\n  color: #021c1e;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  border-radius: 24px 8px;\r\n\r\n  &:hover {\r\n    color: #686868;\r\n    border: 3px solid #686868;\r\n  }\r\n`;\r\nexport const Label = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  font: inherit;\r\n  font-size: 20px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const Poster = styled.img`\r\n  width: 320px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 18px;\r\n  color: ${props => props.theme.black};\r\n`;\r\n\r\nexport const Genres = styled.ul`\r\n  display: flex;\r\n  gap: 12px;\r\n`;\r\n","import { Wrapper, Poster, Info, Genres } from './MovieDetails.styled';\r\nexport const MovieDetails = ({ movie }) => {\r\n  const { title, poster_path, release_date, vote_average, overview, genres } =\r\n    movie;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Poster\r\n        src={\r\n          poster_path\r\n            ? 'https://image.tmdb.org/t/p/w500' + poster_path\r\n            : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\r\n        }\r\n        alt={title}\r\n      />\r\n\r\n      <Info>\r\n        <h2>\r\n          {title} ({release_date && release_date.slice(0, 4)})\r\n        </h2>\r\n        <p>User Score: {(vote_average * 10).toFixed()}%</p>\r\n        <h3>Overview</h3>\r\n        <p>{overview}</p>\r\n        <h3>Genres</h3>\r\n        <Genres>\r\n          {genres.length > 3\r\n            ? genres\r\n                .slice(0, 3)\r\n                .map(genre => <li key={genre.id}>{genre.name}</li>)\r\n            : genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\r\n        </Genres>\r\n      </Info>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { useParams, useLocation, Outlet } from \"react-router-dom\";\r\nimport { useEffect, useState, Suspense } from \"react\";\r\nimport { fetchMoviesById } from \"services/TmbdApi\";\r\nimport { MovieDetails } from \"components/MovieDetails/MovieDetails\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { StyledLink, Wrapper, ButtonsList } from \"components/Layout/Layout.styled\";\r\nimport { Label } from \"components/SearchBar/SearchBar.styled\";\r\nimport  Loader  from \"components/Loader/Loader\";\r\nimport { BiSolidLeftArrow } from 'react-icons/bi';\r\n\r\nconst VideoDetails = () => {\r\n    const { id } = useParams();\r\n    const location = useLocation();\r\n    const [movie, setMovie] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchMovie() {\r\n            try {\r\n                const movie = await fetchMoviesById(id);\r\n                setMovie(movie);\r\n                setIsLoaded(true);\r\n            } catch (error) {\r\n                toast.error('Something went wrong, try one more time');\r\n            }\r\n        }\r\n        fetchMovie();\r\n    }, [id])\r\n\r\n    if (isLoaded) {\r\n        return (\r\n            <main>\r\n                <StyledLink to={`${location.state.from}`}>\r\n                    <Label>\r\n                        <BiSolidLeftArrow style={{ width: 20, height: 24 }} />\r\n                    Go Back\r\n                    </Label>\r\n                </StyledLink>\r\n                <Wrapper>\r\n                    <MovieDetails movie={movie} />\r\n                <ButtonsList>\r\n                    <li>\r\n                        <StyledLink to=\"cast\" state={{from: `${location.state.from}`}}>\r\n                            Cast\r\n                        </StyledLink>\r\n                    </li>\r\n                    <li>\r\n                        <StyledLink to=\"reviews\" state={{from: `${location.state.from}`}}>\r\n                            Reviews\r\n                        </StyledLink>\r\n                    </li>\r\n                </ButtonsList>\r\n                <Suspense fallback={<Loader />}>\r\n                    <Outlet/>\r\n                </Suspense>\r\n                </Wrapper>      \r\n            </main>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default VideoDetails;"],"names":["SearchForm","styled","form","Input","input","SearchButton","button","Label","span","Wrapper","div","Poster","img","Info","props","theme","black","Genres","ul","MovieDetails","movie","title","poster_path","release_date","vote_average","overview","genres","src","alt","slice","toFixed","length","map","genre","name","id","useParams","location","useLocation","useState","setMovie","isLoaded","setIsLoaded","useEffect","fetchMoviesById","toast","error","fetchMovie","to","state","from","style","width","height","Suspense","fallback","Loader"],"sourceRoot":""}