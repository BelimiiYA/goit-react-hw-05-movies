{"version":3,"file":"static/js/257.17e6b8b6.chunk.js","mappings":"iRAGaA,EAAYC,EAAAA,EAAOC,IAAV,yEAMTC,EAAOF,EAAAA,EAAOG,GAAV,2IASJC,EAAWJ,EAAAA,EAAOG,GAAV,+JAURE,GAAWL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,uJAWRO,EAASP,EAAAA,EAAOQ,OAAV,sS,SCgEnB,EA3FqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAqBjB,IAnBAC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IAEXI,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,SAAAC,GACJR,EAAaQ,EACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPX,GAAW,EACZ,GAIN,GAAE,CAACN,IAECG,EAAL,CAIA,MAQIA,GAAa,CAAC,EAPhBe,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAElB,EAASmB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAAC7B,EAAD,CAAQ8B,KAAK,SAAb,SAAsB,cAEvBvB,IAAW,SAACwB,EAAA,EAAD,IAEX1B,IACC,UAACb,EAAD,YACE,gBACEwC,MAAM,QACNC,IACER,EAAW,yCAC2BA,GAD3B,6EAIbS,IAAKR,KAEP,4BACE,0BACGN,EAAM,KAAGC,EAAac,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAab,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,SAAC5B,EAAD,UACG6B,EAAOY,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOzB,mBACA,4BACE,wBAAI,4BACJ,UAAC1C,EAAD,YACE,yBACE,SAACC,EAAD,CAAU6B,GAAG,OAAb,SAAoB,YAEtB,yBACE,SAAC7B,EAAD,CAAU6B,GAAG,UAAb,SAAuB,kBAG3B,mBACA,SAAC,KAAD,SA1DL,CA8DF,C,mMCnGDa,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJJ,EAAAA,EAAMK,IAAN,qCAAwCF,IADpC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAMK,IAAN,+BACGF,EADH,4DAC8DO,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBpC,EAAiB,mCAAG,WAAMV,GAAN,uFACRsC,EAAAA,EAAMK,IAAN,gBACZ3C,EADY,oBACOyC,EADP,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAW,mCAAG,WAAMjD,GAAN,uFACFsC,EAAAA,EAAMK,IAAN,gBACZ3C,EADY,4BACeyC,EADf,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKK,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMnD,GAAN,uFACHsC,EAAAA,EAAMK,IAAN,gBACZ3C,EADY,4BACeyC,EADf,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  margin: 24px;\r\n  gap: 24px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: inline-flex;\r\n  gap: 12px;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const ListInfo = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const LinkInfo = styled(Link)`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  color: #021C1E;\r\n\r\n  &:hover {\r\n    color: #6fb98f;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 8px 8px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  border: 3px solid black;\r\n  color: #021C1E;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  border-radius: 4px 8px;\r\n\r\n  &:hover {\r\n    color: #6fb98f;\r\n    border: 3px solid #6fb98f;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\r\nimport { fetchMovieDetails } from 'services/TmbdApi';\r\nimport Loader from 'components/Loader/Loader';\r\nimport {\r\n  Container,\r\n  List,\r\n  ListInfo,\r\n  LinkInfo,\r\n  Button,\r\n} from './MovieDetails.styled';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movieInfo, setMovieInfo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetailsFilms = () => {\r\n      setLoading(true);\r\n\r\n      fetchMovieDetails(movieId)\r\n        .then(detailMovie => {\r\n          setMovieInfo(detailMovie);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    fetchMovieDetailsFilms();\r\n  }, [movieId]);\r\n\r\n  if (!movieInfo) {\r\n    return;\r\n  }\r\n\r\n  const {\r\n    title,\r\n    release_date,\r\n    popularity,\r\n    overview,\r\n    genres,\r\n    poster_path,\r\n    original_title,\r\n  } = movieInfo || {};\r\n\r\n  return (\r\n    <>\r\n      <Link to={location.state?.from ?? '/'}>\r\n        <Button type=\"button\">Go back</Button>\r\n      </Link>\r\n      {loading && <Loader />}\r\n\r\n      {movieInfo && (\r\n        <Container>\r\n          <img\r\n            width=\"300px\"\r\n            src={\r\n              poster_path\r\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\r\n            }\r\n            alt={original_title}\r\n          />\r\n          <div>\r\n            <h1>\r\n              {title} ({release_date.slice(0, 4)})\r\n            </h1>\r\n            <p>User score: {popularity}</p>\r\n            <h2>Overview</h2>\r\n            <p>{overview}</p>\r\n            <h2>Genres</h2>\r\n            <List>\r\n              {genres.map(genre => (\r\n                <li key={genre.id}>{genre.name}</li>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Container>\r\n      )}\r\n      <hr />\r\n      <div>\r\n        <h3>Additional information</h3>\r\n        <ListInfo>\r\n          <li>\r\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\r\n          </li>\r\n          <li>\r\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\r\n          </li>\r\n        </ListInfo>\r\n        <hr />\r\n        <Outlet />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\nconst API_KEY = 'c67fe955046fda94f580f78044a00ac8';\r\n\r\nexport const fetchTrending = async () => {\r\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchSearchByKeyword = async keyword => {\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchActors = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const fetchReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data.results;\r\n};\r\n"],"names":["Container","styled","div","List","ul","ListInfo","LinkInfo","Link","Button","button","movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","fetchMovieDetails","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","state","from","type","Loader","width","src","alt","slice","map","genre","name","id","axios","defaults","baseURL","API_KEY","fetchTrending","get","response","data","results","fetchSearchByKeyword","keyword","fetchActors","cast","fetchReviews"],"sourceRoot":""}