{"version":3,"file":"static/js/583.fac889af.chunk.js","mappings":"+QAEaA,EAAQC,EAAAA,GAAOC,EAAV,6HACP,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAOHC,EAAcL,EAAAA,GAAOM,GAAV,mFAMXC,EAASP,EAAAA,GAAOQ,GAAV,2IAIU,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAIrBK,EAAaT,EAAAA,GAAOU,KAAV,4C,oMCtBVC,EAAOX,EAAAA,GAAOM,GAAV,oIASJM,EAAWZ,EAAAA,GAAOQ,GAAV,2DAIRK,EAAWb,EAAAA,GAAOc,IAAV,iGAIV,SAAAZ,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,I,SCjBHW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAACL,EAAD,UACGK,EAAKC,OAAS,GACXD,EAAKE,MAAM,EAAG,IAAIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC5C,OACE,SAACX,EAAD,WACE,UAACC,EAAD,YACE,gBACEW,IACED,EACI,kCAAoCA,EAD5B,6EAIdE,IAAKH,KAEP,yBAAG,cAAYD,MACf,yBAAG,SAAOC,SAXCF,EAelB,IACDJ,EAAKG,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC/B,OACE,SAACX,EAAD,WACE,UAACC,EAAD,YACE,gBACEW,IAAK,kCAAoCD,EACzCE,IAAKH,KAEP,yBAAG,cAAYD,MACf,yBAAG,SAAOC,SAPCF,EAWlB,KAGV,E,UCDD,EA/Ba,WACX,IAAQA,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,GAAUZ,GAFjC,QAEUJ,EAFV,QAGaC,SACPW,GAAQ,OAAIZ,IACZc,GAAY,IALlB,gDAQIG,EAAAA,GAAMC,MAAM,mCARhB,0DADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAACf,IAEAS,GAEA,8BACE,SAACd,EAAD,CAAUC,KAAMA,OAIb,SAAC,KAAD,UAAO,0CAEjB,C","sources":["components/ReviewsList/ReviewsList.styled.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Title = styled.p`\r\n  color: ${props => props.theme.black};\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const ReviewsInfo = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const Review = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n  border-bottom: 1px solid ${props => props.theme.black};\r\n  padding-bottom: 8px;\r\n`;\r\n\r\nexport const ReviewInfo = styled.span`\r\n  font-weight: 400;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  margin: 40px;\r\n  padding: 40px;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const CastItem = styled.li`\r\n  width: calc((100% - 80px) / 5);\r\n`;\r\n\r\nexport const CastInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  color: ${props => props.theme.black};\r\n`;\r\n","import { List, CastItem, CastInfo } from './Movies.styled';\r\n\r\nexport const CastList = ({ cast }) => {\r\n  return (\r\n    <List>\r\n      {cast.length > 15\r\n        ? cast.slice(0, 15).map(({ id, character, name, profile_path }) => {\r\n            return (\r\n              <CastItem key={id}>\r\n                <CastInfo>\r\n                  <img\r\n                    src={\r\n                      profile_path\r\n                        ? 'https://image.tmdb.org/t/p/w500' + profile_path\r\n                        : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\r\n                    }\r\n                    alt={name}\r\n                  />\r\n                  <p>Character: {character}</p>\r\n                  <p>Name: {name}</p>\r\n                </CastInfo>\r\n              </CastItem>\r\n            );\r\n          })\r\n        : cast.map(({ id, character, name, profile_path }) => {\r\n            return (\r\n              <CastItem key={id}>\r\n                <CastInfo>\r\n                  <img\r\n                    src={'https://image.tmdb.org/t/p/w500' + profile_path}\r\n                    alt={name}\r\n                  />\r\n                  <p>Character: {character}</p>\r\n                  <p>Name: {name}</p>\r\n                </CastInfo>\r\n              </CastItem>\r\n            );\r\n          })}\r\n    </List>\r\n  );\r\n};\r\n","import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchCast } from 'services/TmbdApi';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CastList } from 'components/Movies/Movies';\r\nimport { Title } from 'components/ReviewsList/ReviewsList.styled';\r\n\r\nconst Cast = () => {\r\n  const { id } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getCast() {\r\n      try {\r\n        const cast = await fetchCast(id);\r\n        if (cast.length) {\r\n          setCast([...cast]);\r\n          setIsLoaded(true);\r\n        }\r\n      } catch (error) {\r\n        toast.error('We can`t find cast of this film');\r\n      }\r\n    }\r\n    getCast();\r\n  }, [id]);\r\n\r\n  if (isLoaded) {\r\n    return (\r\n      <section>\r\n        <CastList cast={cast} />\r\n      </section>\r\n    );\r\n  } else {\r\n    return <Title>Sorry, there is no cast for this movie</Title>;\r\n  }\r\n};\r\n\r\nexport default Cast;\r\n"],"names":["Title","styled","p","props","theme","black","ReviewsInfo","ul","Review","li","ReviewInfo","span","List","CastItem","CastInfo","div","CastList","cast","length","slice","map","id","character","name","profile_path","src","alt","useParams","useState","setCast","isLoaded","setIsLoaded","useEffect","fetchCast","toast","error","getCast"],"sourceRoot":""}